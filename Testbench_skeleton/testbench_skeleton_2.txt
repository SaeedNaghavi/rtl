
    task check_input_change;
        for(int i = 0; i < `INPUT_CTRL_FILE_LEN; i = i + 1)
            if(!$feof(input_ctrl_file[i]))begin
                if(wait_for_change_input[i] == 1'b0 ) begin
                    status_ctrl = $fscanf(input_ctrl_file[i], "%d", input_change_timestamp[i]);
                end
                if(status_ctrl==1) begin
		            if(input_change_timestamp[i] < cycle_count) begin
		                $display("Control input change is late. Please check the input file %s @cycle %5d......\n", input_ctrl_file_name[i], input_change_timestamp[i]);
		                $finish;
		            end 
		            else if(input_change_timestamp[i] > cycle_count) begin
		                wait_for_change_input[i] = 1'b1;
		            end
		            else begin
		                $display("Changing control input @cycle %5d ......", cycle_count);
		                wait_for_change_input[i] = 1'b0;
		                for(int k = 0; k < input_ctrl_num[i]; k = k + 1) begin
		                    status = $fscanf(input_ctrl_file[i], "%d", ctrl_input_port[i][k]);
		                end
		            end
                end
            end
    endtask

    task update_data_input;
        for(int i = 0; i < `INPUT_DATA_FILE_LEN; i = i + 1) begin         
            for(int k = 0; k < input_data_num[i]; k = k + 1) begin
                status = $fscanf(input_data_file[i], "%d", data_input_port[i][k]);
            end
        end
    endtask

    initial begin
        clock = 0;
        reset = 0;
        wait_for_change_input = 0;

        for(int i = 0; i < `INPUT_DATA_FILE_LEN; i = i + 1) begin
            input_data_file[i] = $fopen(input_data_file_name[i],"r");
            status = $fgets(line,input_data_file[i]);
        end

        for(int i = 0; i < `INPUT_CTRL_FILE_LEN; i = i + 1) begin
            input_ctrl_file[i] = $fopen(input_ctrl_file_name[i],"r");
            status = $fgets(line,input_ctrl_file[i]);
        end

        output_file = $fopen(output_file_name,"w");

        reset = 1;
        $display("System is reseting ......\n");
        repeat(2) @(negedge clock);
        reset = 0;
        while(!$feof(input_data_file[0]))begin
            @(negedge clock);
            check_input_change;
            update_data_input;
        end

        repeat(10) @(posedge clock);
        for(int i = 0; i < `INPUT_DATA_FILE_LEN; i = i + 1) begin
            $fclose(input_data_file[i]);
        end
        for(int i = 0; i < `INPUT_CTRL_FILE_LEN; i = i + 1) begin
            $fclose(input_ctrl_file[i]);
        end
        $display("System finishes correctly.......\n");
        $finish;

    end

endmodule
